#!/bin/sh

epoch_s_utc() {
    date +%s
}

tic() {
    tic_time=$(epoch_s_utc) ## Non-local variable.
}

toc() {
    echo $(($(epoch_s_utc) - tic_time))
    unset tic_time
}

log() {
    echo "[$(basename "$0")] ${1:?}"
}

log_e() {
    log "${1:?}" >&2
}

log_start() {
    log "[${1:?}] ${2:?}"
    tic
}

log_end() {
    log "[${1:?}] Took $(toc) second(s)."
}

exit_unless_ci() {
    ## Refs:
    ## - https://github.com/travis-ci/travis-ci/issues/9377
    ## - `CI=true` is documented in [Travis](https://docs.travis-ci.com/user/environment-variables#default-environment-variables), [Circle](https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables) and [GitHub Actions](https://docs.github.com/en/actions/reference/environment-variables#default-environment-variables).
    case "${CI}" in
        true) log_e "Detected environment variable CI=true hence not exiting.";;
        *) exit "${1:?}";;
    esac
}

ROOT_DIR="$(cd "$(dirname "$0")"/.. && pwd)" || exit 69

link_bin() {
    mkdir -p "${HOME:?}"/bin \
        && "${ROOT_DIR:?}"/bin/lns "${ROOT_DIR:?}/bin/${1:?}" "${HOME:?}/bin/${1:?}"
}

DOTFILES_REPO=https://github.com/lucafavatella/dotfiles.git
DOTFILES_DIR="${ROOT_DIR:?}/home/dotfiles"
DOTFILES_ORIGIN="provisioning-osx"
DOTFILES_VERSION="${DOTFILES_ORIGIN:?}/master"

link_dotfile() {
    "${ROOT_DIR:?}"/bin/lns "${DOTFILES_DIR:?}/${1:?}" "${HOME:?}/${1:?}"
}

HOMEBREW_DIR="${HOME:?}/homebrew"

if test "${HOMEBREW_PREFIX}" != "${HOMEBREW_DIR:?}"; then
    HOMEBREW_REPO=https://github.com/Homebrew/brew.git

    log_start "brew" "Clone homebrew..."
    { test -e "${HOMEBREW_DIR:?}" \
          || git -c transfer.fsckobjects=true clone "${HOMEBREW_REPO:?}" "${HOMEBREW_DIR:?}"
    } || exit 1
    log_end "brew"

    log_start "dot" "Clone dotfiles..."
    { mkdir -p "${DOTFILES_DIR:?}" \
          && env REPO="${DOTFILES_REPO:?}" VERSION="${DOTFILES_VERSION:?}" DIR="${DOTFILES_DIR:?}" ORIGIN="${DOTFILES_ORIGIN:?}" "${ROOT_DIR:?}"/bin/git-get
    } || exit 1
    log_end "dot"

    log_start "sh" "Link shell profile..."
    link_dotfile .bash_profile || exit 1
    log_end "sh"

    log_e "Initial phase completed. Re-run script in a distinct new terminal tab."
    exit 78
fi

log_start "macos" "Configure macOS..."
"${ROOT_DIR:?}"/sbin/macos || exit_unless_ci 1
log_end "macos"

log_start "upgrade" "Clean and upgrade Homebrew-installed software..."
{   ## Run `brew update` twice. Ref https://github.com/Homebrew/brew/blob/e098c37dc3734dbe097ed9804a3a88737ff71add/CONTRIBUTING.md#report-a-bug
    brew update \
        && brew update \
        && brew autoremove \
        && brew upgrade \
        && brew outdated --cask --greedy \
        && log_e "You should manually run 'brew upgrade --cask --greedy' of any Homebrew Casks you deem requiring upgrade." ## Ref https://github.com/Homebrew/homebrew-cask/blob/50036e7314a2496ad4e0049d705d027bb606dfd6/USAGE.md#updatingupgrading-casks
} || exit 1
log_end "upgrade"

log_start "install" "Ensuring software is installed..."
brew install bash-completion || exit 1
{ brew install git && link_dotfile .gitconfig; } || exit 1 ## For git-completion.
{ brew install --cask --binaries emacs \
      && link_dotfile .emacs \
      && "${ROOT_DIR:?}"/bin/brew_emacs_upgrade \
      && "${ROOT_DIR:?}"/bin/emacs-prelude --batch -l "${HOME:?}"/.emacs-prelude.d/.emacs.d/init.el \
      && link_bin emacs-prelude
} || exit 1
{ brew install --cask docker || exit 1 ## Apparently the Docker daemon cannot be started from CLI hence [Docker.app needs to be run manually](https://docs.docker.com/docker-for-mac/install/#install-and-run-docker-for-mac). It needs privileged access [to install networking components and links to the Docker apps](https://docs.docker.com/docker-for-mac/install/#install-and-run-docker-for-mac).
  "${ROOT_DIR:?}"/bin/macos_has_hypervisor; \
      case "$?" in
          1) log_e "No Hypervisor. Workaround: Docker Machine, on VirtualBox."
             brew install --cask virtualbox || exit_unless_ci 1
             log_e "macOS requires the user to approve (VirtualBox's) Kernel Extension, in \"System Preferences > Security & Privacy\". Alternative is running 'spctl kext-consent add VB5E2TV963' from recovery (\"Cmd-R\")."
             ## Refs:
             ## - https://developer.apple.com/library/archive/technotes/tn2459/_index.html#//apple_ref/doc/uid/DTS40017658-CH1-TNTAG2
             ## - https://github.com/Homebrew/homebrew-cask/issues/66407#issuecomment-513255068
             ## - https://github.com/Homebrew/homebrew-cask/issues/63337#issuecomment-492758972
             ##
             ## Formula `docker-machine` depends on go,
             ## that depends on [old `go`](https://github.com/golang/go/issues/18600#issuecomment-316809622) for bootstrap.
             ## Such old go versions suffer from [known signal-related intermittent bug](https://github.com/Homebrew/homebrew-core/blob/31a5e9e862075732f348b0fc61f42e0c89a12368/Formula/go.rb#L51).
             ## On installation error, retry.
             brew install docker-machine \
                 || brew install docker-machine \
                 || brew install docker-machine \
                 || exit 1
             { "${ROOT_DIR:?}"/bin/brew_pourable_bottle has jq \
                   && brew install jq \
                   && link_bin docker-daemon-on-machine-start; } || exit 1
             ;;
          0) ;;
          *) exit 1 ;;
      esac
}
link_bin textract || exit 1
{ brew install python && "${ROOT_DIR:?}"/bin/brew_python3_upgrade; } || exit 1
brew autoremove || exit 1
log_end "install"

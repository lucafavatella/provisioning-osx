---
- hosts: localhost
  vars:
    managed_dotfiles:
      - .bash_profile
      - .tmux.conf
      - .gitconfig
      - .emacs
    managed_dirs:
      - dev ## dev(elopment)
      ##
      ## Ref http://refspecs.linuxfoundation.org/FHS_3.0/fhs-3.0.html#usrlocalLocalHierarchy
      - bin
    managed_bins_from_provisioning:
      - ush
      - brew
    managed_bins_from_docker:
      - docker-daemon-on-machine-start
      - docker-openjdk-8-jdk
    emacs_prelude_repo: https://github.com/bbatsov/prelude.git
    emacs_prelude_dir: "{{ home_prefix }}/.emacs-prelude.d/.emacs.d"
    kerl:
      build_dir: "~/.kerl/builds" ## HACK Assumption: `KERL_BUILD_DIR` not changed in `~/.kerlrc`
      install_dir: "{{ home_prefix }}/dev/kerl/installations"
      otp_git_url: "https://github.com/erlang/otp.git"
      cflags_osx: "-I$(brew --prefix)/include"
      ##
      ## (2014 Jun) `--enable-lock-counter` looks enough for
      ## supporting `lcnt` application.
      ##
      ## (2c2c82d) `--enable-lock-checking --enable-lock-counter
      ## --enable-fp-exceptions` are erts-only.
      ##
      ## (2c2c82d) The `wx` application needs the Apple compiler for
      ## using the Cocoa bits of Objective-C, but Xcode 7.0 supports
      ## only the `address` sanitizer - not the `undefined`
      ## (behaviour) one.  Options:
      ## * Stick to Apple compiler (preferred option);
      ## ** Pros:
      ## *** Build `wx`.
      ## ** Cons:
      ## *** Disable `undefined` sanitizer for all OTP.
      ## * Use custom compiler e.g. gcc from Homebrew (with `CC=gcc-5`
      ##   and `CXX=g++-5`).
      ## ** Pros:
      ## *** Enable `undefined` sanitizer for all OTP (but `wx`).
      ## ** Cons:
      ## *** Worse user experience (slower, more output) for many
      ##     harmless undefined behaviours;
      ## *** Do not build `wx` (using
      ##    `KERL_CONFIGURE_DISABLE_APPLICATIONS="wx"`).
      configure_options_2c2c82d_all_but_hipe: "--enable-threads --enable-dirty-schedulers --enable-smp-support --enable-lock-checking --enable-lock-counter --enable-kernel-poll --enable-sctp --disable-hipe --enable-fp-exceptions --enable-vm-probes --enable-sharing-preserving --enable-darwin-64bit --enable-m64-build --enable-sanitizers=address --with-dynamic-trace=dtrace --with-javac --with-ssl"

  tasks:

    ## Dotfiles e.g. ~/.*

    - git:
        repo={{ dotfiles_repo }} version=master
        dest={{ dotfiles_dir }} remote=provisioning-osx
        refspec=+refs/heads/master:refs/remotes/provisioning-osx/master
      with_sequence: count=2 ## HACK Update ref then checkout.

    - file:
        path={{ home_prefix }}/{{ item }}
        state=link
        src={{ dotfiles_dir }}/{{ item }}
      with_items: managed_dotfiles

    ## Top directories e.g. ~/*

    - file:
        path={{ home_prefix }}/{{ item }}
        state=directory
      with_items: managed_dirs

    - git:
        repo={{ emacs_prelude_repo }} version=master
        dest={{ emacs_prelude_dir }} remote=provisioning-osx
        refspec=+refs/heads/master:refs/remotes/provisioning-osx/master
      with_sequence: count=2 ## HACK Update ref then checkout.

    ## Binaries e.g. ~/bin/*

    - file:
        path={{ home_prefix }}/bin/{{ item }}
        state=link
        src={{ provisioning_osx_root_dir }}/bin/{{ item }}
      with_items: managed_bins_from_provisioning

    - git:
        repo={{ docker_bin_repo }} version=master
        dest={{ docker_bin_dir }} remote=provisioning-osx
        refspec=+refs/heads/master:refs/remotes/provisioning-osx/master
      with_sequence: count=2 ## HACK Update ref then checkout.

    - file:
        path={{ home_prefix }}/bin/{{ item }}
        state=link
        src={{ docker_bin_dir }}/{{ item }}
      with_items: managed_bins_from_docker

    ## Erlang/OTP

    - file:
        path={{ kerl.install_dir }}
        state=directory

    - include: kerl.yml
      vars:
        build_dir: "{{ kerl.build_dir }}"
        install_dir: "{{ kerl.install_dir }}"
        git_builds:
          otp_18:
            url: "{{ kerl.otp_git_url }}"
            version: OTP-18.2.1 ## Latest OTP 18 point release.
            cflags: "{{ kerl.cflags_osx }}"
            configure_options: ""
            name: OTP-18.2.1
          otp_19:
            url: "{{ kerl.otp_git_url }}"
            version: aeb26c1 ## Recent master.
            cflags: "{{ kerl.cflags_osx }}"
            configure_options: "{{ kerl.configure_options_2c2c82d_all_but_hipe }}"
            name: git-aeb26c1-all-options-but-hipe
          ## otp_17:
          ##   version: OTP-17.5.6.6 ## Latest OTP 17 point release.
          ##
          ##   Dialyzer in OTP 17.3 has known issue
          ##   (197a846-17.3-w-dialyzer-fix-for-warnings_as_errors).
          ##
          ## otp_16:
          ##   version: OTP_R16B03-1 ## Latest OTP 16 point release.
          ##
          ##   For OTP [<
          ##   R16B01](https://github.com/erlang/otp/commit/03ad5ea)
          ##   use [option re file
          ##   descriptors](https://github.com/Homebrew/homebrew/issues/6143)
      when: "{{ enable_kerl | bool }}"

    ## Whitelist files and directories, logging suspicious ones
    ##
    ## Do not use `file: ... state=absent` as that deletes.

    - find: paths="{{ home_prefix }}" patterns=".*" file_type=file hidden=True
      register: tmp
    - debug: msg="Unexpected dotfiles {{ tmp.files | map(attribute='path') | map('basename') | difference(managed_dotfiles) | join(', ') }}"

    - find: paths="{{ home_prefix }}" patterns=".*" file_type=directory hidden=True
      register: tmp
    - debug: msg="Directories whose name begins with a dot {{ tmp.files | map(attribute='path') | map('basename') | join(', ') }}"

    - find: paths="{{ home_prefix }}" file_type=directory
      register: tmp
    - debug: msg="Unexpected top directories {{ tmp.files | map(attribute='path') | map('basename') | difference(managed_dirs) | join(', ') }}"

    - find: paths="{{ home_prefix }}/bin" file_type=directory hidden=True
      register: tmp
    - debug: msg="Unexpected binaries {{ tmp.files | map(attribute='path') | map('basename') | difference(managed_bins_from_provisioning) | difference(managed_bins_from_docker) | join(', ') }}"

#!/bin/sh

## Copyright (C) 2015 Luca Favatella <slackydeb@gmail.com>

set -e

ROOT_DIR="$(cd $(dirname $0)/.. && pwd)"

brew cask install Caskroom/cask/iterm2 ## No Sixel support (VT340) - [ref](https://gitlab.com/gnachman/iterm2/issues/3240).
brew install --force-bottle tmux
brew install bash-completion
brew install git ## For git-completion.
brew install emacs --with-modules --without-librsvg && { test -e "${HOME}/.emacs" && { test -e "${HOME}/.emacs.d" && $(brew --prefix emacs)/bin/emacs --batch --eval "(require 'package)" -f package-initialize --eval "(require 'epl)" -f epl-refresh -f epl-upgrade; }; }

## Refs:
## * curl `-z`, curl `-w`: http://blog.yjl.im/2012/03/downloading-only-when-modified-using.html
## * `If-Modified-Since` HTTP header field: https://tools.ietf.org/html/rfc7232#section-3.3
## * `304` HTTP status code: https://tools.ietf.org/html/rfc7232#section-4.1
##
## In alternative to curl `-z <file>` option, modification date
## (mtime) of file could be retrieved using (non-POSIX) `stat`
## e.g. `stat -f '%Sm' -t '%Y%m%d%H%M%S' ...`.
##
## If curl `-z <date expression>` option needed, related standard for
## expressing time is RFC 5322.
FfD="${HOME}/homebrew-cask/Caskroom/firefoxdeveloperedition/latest" ## HACK
FfUrl="https://download.mozilla.org/?product=firefox-aurora-latest-ssl&os=osx&lang=en-US" ## HACK Ref https://github.com/caskroom/homebrew-versions/commit/a3c21d439ba0fd09419ef720b843708980f6171f#diff-482097f2c80e9571c53aab608b5eb705L5
test -d "$FfD" || echo "Firefox-related directory '$FfD' not found: first time installation? Continuing."
FfC=$(curl -s -S -L --head -o /dev/null -w '%{http_code}' -z "$FfD" "$FfUrl")
case "${FfC:?}" in
    304) echo "No more recent Firefox Developer Edition to install. Skipping." >&2;;
    200) brew cask install --force caskroom/versions/firefoxdeveloperedition;;
    *) echo "Check for Firefox Developer Edition returned unknown HTTP status code '${FfC}'. Exiting." >&2; exit 1
esac

#brew install packer
brew install docker
brew install docker-machine ## Downloads boot2docker.iso
#brew install docker-machine-driver-xhyve ## docker-machine does not adhere to the specified driver. See https://github.com/zchee/docker-machine-driver-xhyve/issues/128
brew install --force-bottle ansible
#brew install ssh-copy-id

#brew install android-platform-tools ## adb
#brew install android-sdk ## For IntelliJ.
#brew cask install android-studio ## From [IntelliJ IDEA and Android Studio FAQ](http://blog.jetbrains.com/idea/2013/05/intellij-idea-and-android-studio-faq/): "If Iâ€™m already a user of IntelliJ IDEA, do I need to switch to Android Studio for Android development? No. Android Studio is focused specifically on Android development and provides streamlined environment and project setup, but otherwise all of its features are available in IntelliJ IDEA."
brew install autoconf
#brew install bats
brew install checkbashisms
#brew install cmake
#brew install cvs
#brew install cvs2svn
#brew install dash
#brew install gcc
#brew install gdb
{ brew rm ctags || true; } && { { brew rm universal-ctags/universal-ctags/universal-ctags || true; } && brew install --HEAD universal-ctags/universal-ctags/universal-ctags; } && { brew install lucafavatella/core/global --with-universal-ctags --with-pygments || exit 1; } && { cat $(brew --prefix global)/share/gtags/gtags.conf | sed 's/^	:tc=native:$/	:tc=pygments:/' > $(brew --prefix)/etc/gtags.conf || exit 1; } ## After many universal-ctags parsers support references, pygments can be dropped (and maybe GNU GLOBAL - relying on universal-ctags output for both definitions and references). Refs https://github.com/universal-ctags/ctags/pull/569#issuecomment-156300213 http://cvs.savannah.gnu.org/viewvc/global/global/configure.ac?r1=1.178&r2=1.179
#brew install --force-bottle ghc && brew install cabal-install && PATH="$(brew --prefix)/bin:$PATH" cabal update && PATH="$(brew --prefix)/bin:$PATH" cabal install idris
#brew cask install caskroom/versions/intellij-idea-ce
#brew install --force-bottle jq
brew install kerl
#brew install saitoha/sixel/mlterm ## Refs https://en.wikipedia.org/wiki/VT340 https://en.wikipedia.org/wiki/Sixel
#brew install node ## Installs `npm` too.
brew install openssl ## Install openssl - for building Erlang/OTP without skipping the crypto application [on MacOSX >= 10.11](http://erlang.org/pipermail/erlang-questions/2015-October/086386.html).
brew install p7zip ## `7z x` works as a compression-agnostic archive extractor command better than BSD `tar -x` e.g. for `gzip` compression.
#brew install plantuml
#brew install pstree
#brew install pup
brew install python && "$(brew --prefix python)/bin/pip" install --upgrade pip setuptools ## Ref https://github.com/Homebrew/homebrew/blob/0333865e5d831faa6fd6a414fe19e486898aceba/Library/Formula/python.rb#L321-L322
brew install python3 && "$(brew --prefix python3)/bin/pip3" install --upgrade pip setuptools ## Ref https://github.com/Homebrew/homebrew/blob/cfcbf92dedb275bdf06597745d9dcd392dcb2fbb/Library/Formula/python3.rb#L314-L315
#"$(brew --prefix python)/bin/pip" install numpy && brew install OSGeo/osgeo4mac/qgis2 --without-postgresql || exit 1
#brew install rust
#brew install shellcheck
#brew install --force-bottle sqlite
#brew install valgrind
#brew install watch
brew install --force-bottle wxmac ## Install wxWidgets - for building Erlang/OTP.

#brew install --with-deps dinkypumpkin/get_iplayer/get_iplayer

#brew cask install hipchat
#brew cask install libreoffice
#brew cask install vlc

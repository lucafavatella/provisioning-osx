#!/usr/bin/make -f

IMMEDIATE_MAKEFLAGS := $(MAKEFLAGS)
MAKEFLAGS += -k $(IMMEDIATE_MAKEFLAGS)

.DEFAULT_GOAL: all

.PHONY: all
all: ;

# TODO Change quitting safari from cmd-q to something more complex.

# -- 8< ----
# Copyright (c) Mathias Bynens <https://mathiasbynens.be/> https://github.com/mathiasbynens/dotfiles/blob/ea68bda80a455e149d29156071d4c8472f6b93cb/.macos MIT
# Copyright (c) Luca Favatella MIT

all: resume
.PHONY: resume
resume:
	# Disable Resume system-wide
	defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false

all: correction
.PHONY: correction
correction:
	# Disable automatic capitalization as it’s annoying when typing code
	defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false
	
	# Disable smart dashes as they’re annoying when typing code
	defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
	
	# Disable automatic period substitution as it’s annoying when typing code
	defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false
	
	# Disable smart quotes as they’re annoying when typing code
	defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
	
	# Disable auto-correct
	defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

all: keyboard
.PHONY: keyboard
keyboard:
	# Enable full keyboard access for all controls
	# (e.g. enable Tab in modal dialogs)
	defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

all: finder
.PHONY: finder
finder:
	# Set Desktop as the default location for new Finder windows
	# For other paths, use `PfLo` and `file:///full/path/here/`
	defaults write com.apple.finder NewWindowTarget -string "PfDe"
	defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Desktop/"
	
	# Finder: show all filename extensions
	defaults write NSGlobalDomain AppleShowAllExtensions -bool true
	
	# Finder: show status bar
	defaults write com.apple.finder ShowStatusBar -bool true
	
	# Finder: show path bar
	defaults write com.apple.finder ShowPathbar -bool true
	
	# Display full POSIX path as Finder window title
	defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
	
	# Avoid creating .DS_Store files on network or USB volumes
	defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
	defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
	
	# Use list view in all Finder windows by default
	# Four-letter codes for the other view modes: `icnv`, `clmv`, `glyv`
	defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

all: dock
.PHONY: dock
dock:
	# Wipe all (default) app icons from the Dock
	# This is only really useful when setting up a new Mac, or if you don’t use
	# the Dock to launch apps.
	defaults write com.apple.dock persistent-apps -array
	
	# Remove the auto-hiding Dock delay
	defaults write com.apple.dock autohide-delay -float 0
	# Remove the animation when hiding/showing the Dock
	defaults write com.apple.dock autohide-time-modifier -float 0
	
	# Automatically hide and show the Dock
	defaults write com.apple.dock autohide -bool true
	
	# Don’t show recent applications in Dock
	defaults write com.apple.dock show-recents -bool false

all: safari
.PHONY: safari
safari:
	# Privacy: don’t send search queries to Apple
	#defaults write com.apple.Safari UniversalSearchEnabled -bool false
	#defaults write com.apple.Safari SuppressSearchSuggestions -bool true
	
	# Press Tab to highlight each item on a web page
	#defaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true
	#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true
	
	# Show the full URL in the address bar (note: this still hides the scheme)
	#defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
	
	# Set Safari’s home page to `about:blank` for faster loading
	#defaults write com.apple.Safari HomePage -string "about:blank"
	
	# Prevent Safari from opening ‘safe’ files automatically after downloading
	#defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
	
	# Disable Safari’s thumbnail cache for History and Top Sites
	#defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2
	
	# Enable Safari’s debug menu
	#defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
	
	# Make Safari’s search banners default to Contains instead of Starts With
	#defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
	
	# Disable auto-correct
	#defaults write com.apple.Safari WebAutomaticSpellingCorrectionEnabled -bool false
	
	# Warn about fraudulent websites
	#defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true
	
	# Disable plug-ins
	#defaults write com.apple.Safari WebKitPluginsEnabled -bool false
	#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool false
	
	# Disable Java
	#defaults write com.apple.Safari WebKitJavaEnabled -bool false
	#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false
	#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles -bool false
	
	# Block pop-up windows
	#defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
	#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false
	
	# Disable auto-playing video
	#defaults write com.apple.Safari WebKitMediaPlaybackAllowsInline -bool false
	defaults write com.apple.SafariTechnologyPreview WebKitMediaPlaybackAllowsInline -bool false
	#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback -bool false
	defaults write com.apple.SafariTechnologyPreview com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback -bool false
	
	# Update extensions automatically
	#defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true

all: spotlight
.PHONY: spotlight
spotlight:
	# Disable Spotlight indexing for any volume that gets mounted and has not yet
	# been indexed before.
	# Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume.
	sudo /usr/libexec/PlistBuddy -c "Add :Exclusions: string /Volumes" /System/Volumes/Data/.Spotlight-V100/VolumeConfiguration.plist
	# Change indexing order and disable some search results
	# Yosemite-specific search results (remove them if you are using macOS 10.9 or older):
	# 	MENU_DEFINITION
	# 	MENU_CONVERSION
	# 	MENU_EXPRESSION
	# 	MENU_SPOTLIGHT_SUGGESTIONS (send search queries to Apple)
	# 	MENU_WEBSEARCH             (send search queries to Apple)
	# 	MENU_OTHER
	#defaults write com.apple.spotlight orderedItems -array \
	#
	defaults write com.apple.Spotlight orderedItems -array \
		'{"enabled" = 1;"name" = "APPLICATIONS";}' \
		'{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
		'{"enabled" = 1;"name" = "DIRECTORIES";}' \
		'{"enabled" = 1;"name" = "PDF";}' \
		'{"enabled" = 1;"name" = "FONTS";}' \
		'{"enabled" = 0;"name" = "DOCUMENTS";}' \
		'{"enabled" = 0;"name" = "MESSAGES";}' \
		'{"enabled" = 0;"name" = "CONTACT";}' \
		'{"enabled" = 0;"name" = "EVENT_TODO";}' \
		'{"enabled" = 0;"name" = "IMAGES";}' \
		'{"enabled" = 0;"name" = "BOOKMARKS";}' \
		'{"enabled" = 0;"name" = "MUSIC";}' \
		'{"enabled" = 0;"name" = "MOVIES";}' \
		'{"enabled" = 0;"name" = "PRESENTATIONS";}' \
		'{"enabled" = 0;"name" = "SPREADSHEETS";}' \
		'{"enabled" = 0;"name" = "SOURCE";}' \
		'{"enabled" = 0;"name" = "MENU_DEFINITION";}' \
		'{"enabled" = 0;"name" = "MENU_OTHER";}' \
		'{"enabled" = 0;"name" = "MENU_CONVERSION";}' \
		'{"enabled" = 0;"name" = "MENU_EXPRESSION";}' \
		'{"enabled" = 0;"name" = "MENU_WEBSEARCH";}' \
		'{"enabled" = 0;"name" = "MENU_SPOTLIGHT_SUGGESTIONS";}'
	# Load new settings before rebuilding the index
	#killall mds > /dev/null 2>&1
	# `killall mds` does not kill enough to prevent revert of settings.
	-sudo killall mds > /dev/null 2>&1
	# Make sure indexing is enabled for the main volume
	#sudo mdutil -i on / > /dev/null
	# `mdutil -i on /` does not return non-zero exit status on error.
	# Write then test, as writing (i.e. `sudo mdutil -i on /`) may print "Error: Index is already changing state.  Please try again in a moment.".
	( t() { test "/:Indexingenabled." = $$(printf "%s" $$(mdutil -s /)); }; w() { sudo mdutil -i on /; }; t || { w && t || { sleep 1 && w && t || { sleep 3 && w && t || { sleep 5 && w && t; }; }; } }; )
	# Rebuild the index from scratch
	#sudo mdutil -E / > /dev/null
	# `mdutil -E /` does not return non-zero exit status on error.
	sudo mdutil -E /

all: terminal
.PHONY: terminal
terminal:
	# Only use UTF-8 in Terminal.app
	defaults write com.apple.terminal StringEncodings -array 4
	
	# Enable Secure Keyboard Entry in Terminal.app
	# See: https://security.stackexchange.com/a/47786/8918
	defaults write com.apple.terminal SecureKeyboardEntry -bool true

all: backup
.PHONY: backup
backup:
	# Prevent Time Machine from prompting to use new hard drives as backup volume
	defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

all: activity
.PHONY: activity
activity:
	# Visualize CPU usage in the Activity Monitor Dock icon
	defaults write com.apple.ActivityMonitor IconType -int 5
	
	# Show all processes in Activity Monitor
	defaults write com.apple.ActivityMonitor ShowCategory -int 0

all: textedit
.PHONY: textedit
textedit:
	# Use plain text mode for new TextEdit documents
	defaults write com.apple.TextEdit RichText -int 0
	# Open and save files as UTF-8 in TextEdit
	defaults write com.apple.TextEdit PlainTextEncoding -int 4
	defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

all: diskutil
.PHONY: diskutil
diskutil:
	# Enable the debug menu in Disk Utility
	defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
	defaults write com.apple.DiskUtility advanced-image-options -bool true

all: updates
.PHONY: updates
updates:
	# Enable the automatic update check
	defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true
	
	# Check for software updates daily, not just once per week
	defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
	
	# Install System data files & security updates
	defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

all: hotplug
.PHONY: hotplug
hotplug:
	# Prevent Photos from opening automatically when devices are plugged in
	defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

all: restart
.PHONY: restart
restart:
	echo "Done. Note that some of these changes require a logout/restart to take effect."
